
use_bpm 90

live_loop :kick do
  sample :bd_haus
  sleep 1
end

live_loop :snare do
  sleep 0.75
  sample :drum_tom_mid_soft
  sleep 0.75
  with_fx :echo do |r|
    if one_in(1)
      control r, phase: [0.75, 0.375].choose
    else
      control r, mix:0
    end
    sample :sn_dub, rate: -2
  end
  sleep 0.5
end

live_loop :hats do
  sample :drum_cymbal_closed
  sleep 0.5
end

live_loop :breakfastt do
  sync :kick
  with_fx :reverb, room: 0.7, damp: 1 do
    sample :loop_breakbeat, beat_stretch: 4, amp:2, rate:-1
  end
  sleep 4
end

chords_ring = (ring, chord(:Eb1, :m, invert: 2), chord(:B1, :M), chord(:Db1, :m), chord(:Db1, :m),
                     chord(:Eb1, :m, invert: 2), chord(:B1, :M), chord(:Db1, :m), chord(:Db1, :m),
                     chord(:Eb1, :m, invert: 2), chord(:Bb1, :m7), chord(:Ab1, :m), chord(:Ab1, :m),
                     chord(:Eb1, :m, invert: 2), chord(:B1, :M), chord(:Db1, :m), chord(:Db1, :m)
)


currentTick = 0

live_loop :bass do
    sync :snare
    currentTick = tick;
    puts currentTick
    use_synth :fm
    with_fx :slicer, mix: 0.3 do
      with_transpose 12*0 do
        play_pattern_timed chords_ring[currentTick].take(3).shuffle, (ring 0.75, 0.75, 0.5),  amp:2
      end
    end
end

live_loop :some_synth do
  use_synth :blade
  sync :bass
  with_fx :wobble, phase: 0.325 do
    with_transpose 12*3 do
      play_pattern_timed chords_ring[currentTick].take(3).reflect, 0.125, sustain:0.5, release: 1, amp:0.5
    end
  end
end

live_loop :chordd do
  sync :bass
  use_synth :piano
  with_transpose 12*3 do
      with_fx :echo do |r|
        if one_in(1)
          control r, phase: 0.125, decay: 4
        else
          control r, mix:0
        end
        with_fx :reverb do
          play_chord chords_ring[currentTick], release:0.75, amp: 3
      end
    end
  end
end
